name: Run All Tests

on:
  workflow_dispatch:
    inputs:
      interlok-version:
        description: 'Interlok Version (e.g. 5.0.0B1-RELEASE or 5.0.0-RELEASE)'
        required: true
        type: string
      feature-branch:
        description: 'Feature Branch (e.g. feature/INTERLOK-4532)'
        required: true
        type: string
        default: 'develop'

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  get-projects-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set projects matrix
        id: set-matrix
        run: |
          PROJECTS='["testing_activemq"]'
          echo "matrix={\"project\":$PROJECTS}" >> $GITHUB_OUTPUT

  run-tests:
    needs: get-projects-list
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.get-projects-list.outputs.matrix)}}
      fail-fast: false
      max-parallel: 10
    
    steps:
    - name: Debug Info
      run: |
        echo "Checking out repository: interlok-testing/${{ matrix.project }}"
        echo "Branch: ${{ github.event.inputs.feature-branch }}"

    - name: Manual Git Clone
      run: |
        echo "Cloning repository..."
        git clone https://github.com/interlok-testing/${{ matrix.project }}.git .
        
        echo "Available branches:"
        git branch -r
        
        echo "Checking out branch..."
        if git fetch origin ${{ github.event.inputs.feature-branch }}; then
          git checkout ${{ github.event.inputs.feature-branch }}
        else
          echo "Branch not found, using default branch"
          git checkout $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
        fi
        
        echo "Current branch:"
        git branch --show-current

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run Gradle tests
      run: |
        ./gradlew functionalTest -PinterlokVersion=${{ github.event.inputs.interlok-version }}
      continue-on-error: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.project }}
        path: build/test-results

  summarize-results:
    needs: run-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4

    - name: Display structure of downloaded files
      run: ls -R

    - name: Summarize test results
      run: |
        echo "Test Results Summary:" > summary.txt
        for dir in test-results-*; do
          project=${dir#test-results-}
          if [ -f "$dir/test/TEST-*.xml" ]; then
            result=$(grep "failures=\"0\"" "$dir/test/TEST-*.xml" > /dev/null && echo "PASSED" || echo "FAILED")
          else
            result="NO RESULTS"
          fi
          echo "$project: $result" >> summary.txt
        done
        cat summary.txt

    - name: Upload summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: summary.txt
